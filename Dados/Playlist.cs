using System;using System.Collections.Generic;using System.Text;using System.Data;using System.Data.Sql;using MySql.Data.MySqlClient;namespace WinSIP.Dados{    internal class Playlist    {        private MySqlConnection Conexao;        public int IdPlaylist;        public string Descritivo;        internal Playlist()        {            Conexao = AcessoBD.Connection;            IdPlaylist = 0;            Descritivo = "";        }        /// <summary>        /// Devolve todos os registos da tabela Playlist        /// </summary>        /// <returns>DataSet com todos os registos</returns>        internal DataSet LerPlaylist()        {            MySqlDataAdapter da;            DataSet ds;            MySqlCommand cmd;            cmd = new MySqlCommand( "Select * from playlist", Conexao );            cmd.CommandType = CommandType.Text;            da = new MySqlDataAdapter( cmd );            ds = new DataSet();            da.Fill( ds, "tabela" );            return ds;        }        /// <summary>        /// Devolde um registo        /// </summary>        /// <param name="IdPlaylist">Id do registo a Devolver</param>        /// <returns>DataSet com 1 element</returns>        internal DataSet GetPlaylist( int IdPlaylist )        {            MySqlDataAdapter da;            DataSet ds;            MySqlCommand cmd;            cmd = new MySqlCommand( "select * from Playlist where IdPlaylist = @IdPlaylist ", Conexao );            cmd.Parameters.Add( "IdPlaylist", MySqlDbType.Int32 ).Value = IdPlaylist;            cmd.CommandType = CommandType.Text;            da = new MySqlDataAdapter( cmd );            ds = new DataSet();            da.Fill( ds, "tabela" );            return ds;        }        /// <summary>        ///         /// </summary>        /// <param name="dados">        /// dados.IdPlaylist: Não necessário |        /// dados.Descritivo: Descritivo da Playlist a ser inserida        /// </param>        /// <returns>ID da Playlist inserida</returns>        internal int InsertPlaylist( Playlist dados )        {            MySqlCommand cmd;            int id = -1;            string sql = @"                     insert into playlist( Descritivo ) values ( @Descritivo );                    select LAST_INSERT_ID() as SCOPE_IDENTITY";            cmd = new MySqlCommand( sql, Conexao );            cmd.Parameters.Add( "Descritivo", MySqlDbType.VarChar ).Value = dados.Descritivo;            cmd.CommandType = CommandType.Text;            try            {                MySqlDataAdapter da;                DataSet ds;                da = new MySqlDataAdapter( cmd );                ds = new DataSet();                da.Fill( ds, "tabela" );                if ( ds.Tables[0].Rows.Count > 0 )                {                    if ( ds.Tables[0].Rows[0]["SCOPE_IDENTITY"] != null )                    {                        id = int.Parse( ds.Tables[0].Rows[0]["SCOPE_IDENTITY"].ToString() );                    }                    else                        id = -1;                }                else                    id = -1;            }            catch ( Exception ex )            {                throw ex;            }            finally            {                Conexao.Close();            }            return id;        }        /// <summary>        /// Atualiza um registo na tabela Playlist        /// </summary>        /// <param name="dados">        /// dados.IdPlaylist: ID da Playlist a ser atualizada |        /// dados.Descritivo: Novo Descritivo da Playlist        /// </param>        /// <returns>Numero de rows afetadas</returns>        internal int UpdatePlaylist( Playlist dados )        {            MySqlCommand cmd;            int rowAffect = 0;            cmd = new MySqlCommand( @"                     UPDATE playlist                     SET Descritivo=@Descritivo, DataA=CURRENT_TIMESTAMP()                    WHERE   IdPlaylist=@IdPlaylist", Conexao );            cmd.Parameters.Add( "Descritivo", MySqlDbType.VarChar ).Value = dados.Descritivo;            cmd.Parameters.Add( "IdPlaylist", MySqlDbType.Int32 ).Value = dados.IdPlaylist;            cmd.CommandType = CommandType.Text;            try            {                Conexao.Open();                rowAffect = cmd.ExecuteNonQuery();            }            catch ( Exception ex )            {                throw ex;            }            finally            {                Conexao.Close();            }            return rowAffect;        }        /// <summary>        /// Elimina um registo na tabela Playlist        /// </summary>        /// <param name="IdPlaylist">ID da Playlist a ser eliminada</param>        /// <returns>Numero de rows afetadas</returns>        internal int DeletePlaylist( int IdPlaylist )        {            MySqlCommand cmd;            int rowAffect = 0;            string query = @"                delete from playlistfiles where IdPlaylist=@IdPlaylist;                delete from playlist where IdPlaylist=@IdPlaylist;            ";            cmd = new MySqlCommand( query, Conexao );            cmd.Parameters.Add( "IdPlaylist", MySqlDbType.Int32 ).Value = IdPlaylist;            cmd.CommandType = CommandType.Text;            try            {                Conexao.Open();                rowAffect = cmd.ExecuteNonQuery();            }            catch ( Exception ex )            {                throw ex;            }            finally            {                Conexao.Close();            }            return rowAffect;        }    }}